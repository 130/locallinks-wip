#!/bin/bash

MASTER_COMMIT_MESSAGE="Increment version"

# Check:
# * if current directory is Git repository
# * if Git repository has 'master' branch
git checkout --quiet master
if [ "$?x" != "0x" ]; then
  exit 1
fi

if [ "$(git log --pretty=format:%s --max-count=1)" \
     == "$MASTER_COMMIT_MESSAGE" ]; then
  echo "ERROR!"
  echo "Message of last commit to master branch is equialent to message"
  echo "hardcoded in this deployment script."
  echo "Seems like releasing new extension version without useful changes."
  echo "SOLUTION: make some useful commits to master branch"
  exit 1
fi

# Check:
# * if current directory is Git repository
# * if Git repository has 'gh-pages' branch
# * if current working directory changes are commited
git checkout --quiet gh-pages
if [ "$?x" != "0x" ]; then
  exit 1
fi

git checkout --quiet master

if [ ! -e manifest.json ]; then
  echo "ERROR!"
  echo "Can't find manifest.json"
  echo "Seems like current directory isn't Chrome extension directory"
  echo "SOLUTION: cd to locallinks-wip directory"
  exit 1
fi

grep --quiet --no-messages "LocalLinks WIP" manifest.json
if [ "$?x" != "0x" ]; then
  echo "ERROR!"
  echo "Can't find string 'LocalLinks WIP' in manifest.json"
  echo "Seems like current directory isn't locallinks-wip directory"
  echo "SOLUTION: cd to locallinks-wip directory"
  exit 1
fi

if [ "${LOCALLINKS_WIP_KEY_PEM}x" == "x" \
      -o ! -e "${LOCALLINKS_WIP_KEY_PEM}" ]; then
  echo "ERROR!"
  echo "Private key wasn't found on path defined in LOCALLINKS_WIP_KEY_PEM!"
  exit 1
fi

# Quoted from
# http://code.google.com/chrome/extensions/dev/manifest.html#version
#
# One to four dot-separated integers identifying the version of extension.
#
# A couple of rules apply to the integers:
# * they must be between 0 and 65535, inclusive,
# * and non-zero integers can't start with 0.
#
# For example, 99999 and 032 are both invalid.

# Make version number as "YYYY.MM.DD.HHMM1"
CURRENT_DATE=$(date --utc +%-Y.%-m.%-d%H%M)
CURRENT_YYMMDD=${CURRENT_DATE:0:${#CURRENT_DATE}-4}
CURRENT_HHMM=${CURRENT_DATE: -4}
while [ "${CURRENT_HHMM:0:1}x" == "0x" ]; do
  CURRENT_HHMM=${CURRENT_HHMM:1}
done
VERSION="${CURRENT_YYMMDD}.${CURRENT_HHMM}1"

CRX_NAME="locallinks-wip-$VERSION"
while [ "$(git ls-tree --name-only gh-pages crx/${CRX_NAME}.crx)x" != "x" ]; do
  VERSION_BASE=${VERSION:0:${#VERSION}-1}
  NEXT_VERSION_NUM=$(( ${VERSION: -1} + 1 ))
  VERSION="${VERSION_BASE}${NEXT_VERSION_NUM}"
  CRX_NAME="locallinks-wip-$VERSION"

  if [ "${NEXT_VERSION_NUM}x" == "10x" ]; then
    echo "ERROR!"
    echo "In trying to increment version suffix it getted to 10!"
    echo "Resulting version is ${VERSION}"
    echo "Suffix doesn't allowed to be 10 or greater because it could lead to"
    echo "invalid last component of version number (greater than 65535)."
    echo "SOLUTION: just wait a minute and retry deployment."
    exit 1
  fi
done

EXPORT_DIR=$(mktemp --directory --tmpdir "$CRX_NAME.XXX")
trap "rm -rf -- ${EXPORT_DIR}" EXIT

mkdir $EXPORT_DIR/src

sed -ie "s/^\(\s*\"version\":\s*\)\".*$/\1\"$VERSION\",/g" manifest.json
git commit --all -m "$MASTER_COMMIT_MESSAGE"

git checkout-index \
  --prefix=${EXPORT_DIR}/src/ \
  --force \
  -- background_page/* content_script/* options_page/* lib/* \
     manifest.json COPYING

# PACKING EXTENSION start
CWD=$(pwd -P)

cd "${EXPORT_DIR}/src"
# zip up the crx dir
zip -qr -9 -X "${EXPORT_DIR}/${CRX_NAME}.zip" .

cd "$EXPORT_DIR"
# signature
openssl sha1 -sha1 -binary -sign "$LOCALLINKS_WIP_KEY_PEM" \
  < "${CRX_NAME}.zip" \
  > "${CRX_NAME}.sig"
# public key
openssl rsa -pubout -outform DER \
  < "$LOCALLINKS_WIP_KEY_PEM" \
  > "${CRX_NAME}.pub" \
  2>/dev/null

byte_swap () {
  # Take "abcdefgh" and return it as "ghefcdab"
  echo "${1:6:2}${1:4:2}${1:2:2}${1:0:2}"
}

pub_len_hex=$(byte_swap \
  $(printf '%08x\n' $(ls -l "${CRX_NAME}.pub" | awk '{print $5}'))
)
sig_len_hex=$(byte_swap \
  $(printf '%08x\n' $(ls -l "${CRX_NAME}.sig" | awk '{print $5}'))
)
(
  # "Cr24" is magic number (required constant in beginning of *.crx file).
  # "2" is currently used version of *.crx file format (unsigned int 32 bit).
  #
  #    "C r  2 4  2"
  echo "4372 3234 0200 0000 $pub_len_hex $sig_len_hex" | xxd -r -p
  cat "${CRX_NAME}.pub" "${CRX_NAME}.sig" "${CRX_NAME}.zip"
) > "${CRX_NAME}.crx"

if [ ! -e "$EXPORT_DIR/$CRX_NAME.crx" ]; then
  echo "ERROR!"
  echo "Packed extension wasn't found on path '$EXPORT_DIR/$CRX_NAME.crx'"
  exit 1
fi
cd "$CWD"
# PACKING EXTENSION end

exit 0 # Following part is untested yet.

git checkout --quiet gh-pages
mv $EXPORT_DIR/$CRX_NAME.crx crx
sed -ie "s///g" updates.xml
sed -ie "s///g" updates.xml
sed -ie "s///g" index.html
git commit --all -m "Add $CRX_NAME.crx"
